services:
  django:
    image: pytogether-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    networks:
      - backend
    ports:
      - "8000:8000"   # so you can communicate using npm run dev on frontend

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - backend

  celery:
    image: pytogether-backend:latest
    command: celery -A backend worker --concurrency=1 -l info   # we only need one processor since we autosave every 5 minutes (and the task does not take 5 minutes)
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    networks:
      - backend

  celery-beat:
    image: pytogether-backend:latest
    command: celery -A backend beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    networks:
      - backend

volumes:
  redis_data:

networks:
  backend:
    driver: bridge
